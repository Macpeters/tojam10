<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>gameCtrIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup View Variables
globalvar gvX, gvY, gvW, gvH, gvObj;
gvX = view_xview[0];
gvY = view_yview[0];
gvW = view_wview[0];
gvH = view_hview[0];
gvObj = view_object[0];





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update the Viewport and backgrounds
if(view_wview[0] != gvW || view_hview[0] != gvH){
    var tempW, tempH;
    tempW = view_wview[0];
    tempH = view_hview[0];
    
    //change the size of the view smoothly
    if(gvW/view_wport[0] &gt;= gvH/view_hport[0]){
        view_hview[0] = lerp(view_hview[0], gvH, 0.5);
        view_wview[0] = view_hview[0]/view_hport[0]*view_wport[0];
    } else{
        view_wview[0] = lerp(view_wview[0], hvW, 0.5);
        view_hview[0] = view_wview[0]/view_wport[0] * view_hport[0];
    }

    view_xview[0] -= (view_wview[0]-tempW)/2;
    view_yview[0] -= (view_hview[0]-tempH)/2;
}
//keep the view within the room
if(view_wview[0] &gt; room_width){
    view_wview[0] = room_width;
    view_hview[0] = view_wview[0]/view_wport[0]*view_hport[0];
}
if(view_hview[0] &gt; room_height){
    view_hview[0] = room_height;
    view_wview[0] = view_hview[0]/view_hport[0]*view_wport[0];
}
if instance_exists(gvObj) {
 gvX = min(max(0,gvObj.x-view_wview[0]/2+(view_wview[0]/10*gvObj.image_xscale)),room_width-view_wview[0]);
 gvY = min(max(0,gvObj.y-view_hview[0]/2),room_height-view_hview[0]);
}
//place the view
view_xview[0] = min(max(0,lerp(view_xview[0],gvX,.15)),room_width-view_wview[0]);
view_yview[0] = min(max(0,lerp(view_yview[0],gvY,.3)),room_height-view_hview[0]);

/* if the player is not touching the trigger, 
the view will revert to default settings */
gvW = gvWStart;
gvH = gvHStart;


//Backgrounds
//8 is the max number of backgrounds allowed in gamemaker
for(i=0; i&lt;8; i++){
    //don't worry about backgrounds that haven't been chosen
    if(background_visible[i] == true){
        //horizontal
        if(background_width[i] != room_width){
            background_x[i] = view_xview[0]/(room_width-view_wview[0])*(room_width-background_width[i]);
        }
        //vertical 
        if(background_height[i] != room_height){
        //Divide by zero error
          //  background_y[i] = view_yview[0]/(room_height-view_hview[0])*(room_height-background_height[i]);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remove the controller, if there is one
if(object_exists(obj_js_base)){
    with(obj_js_base){
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add the controller
instance_create(gvX + 200, gvY + 200, obj_js_base);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup Game View
globalvar gvXStart, gvYStart, gvWStart, gvHStart, gvObjStart;
gvXStart = view_xview[0];
gvYStart = view_yview[0];
gvWStart = view_wview[0];
gvHStart = view_hview[0];
gvObjStart = view_object[0];

if instance_exists(gvObj) {
 view_xview[0] = min(max(0,gvX),room_width-view_wview[0]);
 view_yview[0] = min(max(0,gvY),room_height-view_hview[0]);
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///save the file
saveFile();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///do not draw the icon
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
